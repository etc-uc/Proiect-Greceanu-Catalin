;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 8/26/2020 9:30:03 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x286D      	GOTO       109
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x0827      	MOVF       ___DoICPAddr+1, 0
0x0006	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0007	0x0826      	MOVF       ___DoICPAddr, 0
0x0008	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0009	0x0008      	RETURN
; end of _____DoICP
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x000A	0x300E      	MOVLW      14
0x000B	0x1283      	BCF        STATUS, 5
0x000C	0x1303      	BCF        STATUS, 6
0x000D	0x00FD      	MOVWF      R13
L_Delay_22us1:
0x000E	0x0BFD      	DECFSZ     R13, 1
0x000F	0x280E      	GOTO       L_Delay_22us1
0x0010	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x0011	0x0008      	RETURN
; end of _Delay_22us
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0012	0x2003      	CALL       _____DoICP
0x0013	0x118A      	BCF        PCLATH, 3
0x0014	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0015	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0016	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0017	0x0AA6      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0018	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0019	0x0AA7      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x001A	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x001B	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x001C	0x2812      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x001D	0x0008      	RETURN
; end of ___CC2DW
_ADC_Read:
;__Lib_ADC_A_B.c,49 :: 		
;__Lib_ADC_A_B.c,51 :: 		
0x001E	0x30C3      	MOVLW      195
0x001F	0x1283      	BCF        STATUS, 5
0x0020	0x1303      	BCF        STATUS, 6
0x0021	0x059F      	ANDWF      ADCON0, 1
;__Lib_ADC_A_B.c,55 :: 		
0x0022	0x3040      	MOVLW      64
0x0023	0x059F      	ANDWF      ADCON0, 1
;__Lib_ADC_A_B.c,56 :: 		
0x0024	0x30F0      	MOVLW      240
0x0025	0x1683      	BSF        STATUS, 5
0x0026	0x049F      	IORWF      ADCON1, 1
;__Lib_ADC_A_B.c,57 :: 		
0x0027	0x1283      	BCF        STATUS, 5
0x0028	0x179F      	BSF        ADCON0, 7
;__Lib_ADC_A_B.c,58 :: 		
0x0029	0x082E      	MOVF       FARG_ADC_Read_channel, 0
0x002A	0x00F0      	MOVWF      R0
0x002B	0x0DF0      	RLF        R0, 1
0x002C	0x1070      	BCF        R0, 0
0x002D	0x0DF0      	RLF        R0, 1
0x002E	0x1070      	BCF        R0, 0
0x002F	0x0870      	MOVF       R0, 0
0x0030	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_B.c,61 :: 		
0x0031	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_A_B.c,64 :: 		
0x0032	0x200A      	CALL       _Delay_22us
;__Lib_ADC_A_B.c,67 :: 		
0x0033	0x149F      	BSF        ADCON0, 1
;__Lib_ADC_A_B.c,70 :: 		
L_ADC_Read2:
0x0034	0x1C9F      	BTFSS      ADCON0, 1
0x0035	0x2838      	GOTO       L_ADC_Read3
;__Lib_ADC_A_B.c,71 :: 		
0x0036	0x0000      	NOP
0x0037	0x2834      	GOTO       L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_B.c,74 :: 		
0x0038	0x101F      	BCF        ADCON0, 0
;__Lib_ADC_A_B.c,77 :: 		
0x0039	0x081E      	MOVF       ADRESH, 0
0x003A	0x00F1      	MOVWF      R0+1
0x003B	0x01F0      	CLRF       R0
0x003C	0x1683      	BSF        STATUS, 5
0x003D	0x081E      	MOVF       ADRESL, 0
0x003E	0x04F0      	IORWF      R0, 1
0x003F	0x3000      	MOVLW      0
0x0040	0x04F1      	IORWF      R0+1, 1
;__Lib_ADC_A_B.c,78 :: 		
L_end_ADC_Read:
0x0041	0x0008      	RETURN
; end of _ADC_Read
_Mul_16X16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x0042	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x0043	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x0044	0x01FB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x0045	0x01FA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x0046	0x01F9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x0047	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x0048	0x00F8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x0049	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x004A	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x004B	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x004C	0x2856      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x004D	0x0874      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x004E	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x004F	0x0875      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x0050	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x0051	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x0052	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x0053	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x0054	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x0055	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x0056	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x0057	0x285E      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x0058	0x0874      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x0059	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x005A	0x0875      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x005B	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x005C	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x005D	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x005E	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x005F	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x0060	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x0061	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x0062	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x0063	0x2849      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x0064	0x087B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x0065	0x00F3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x0066	0x087A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x0067	0x00F2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x0068	0x0879      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x0069	0x00F1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x006A	0x0878      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x006B	0x00F0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
L_end_Mul_16X16_U:
0x006C	0x0008      	RETURN
; end of _Mul_16X16_U
_main:
;LDR.c,5 :: 		void main() {
;LDR.c,6 :: 		ANSEL  = 1;                           //Declarare variabila analogica pentru cea mai mica valoare
0x006D	0x3001      	MOVLW      1
0x006E	0x1283      	BCF        STATUS, 5
0x006F	0x1703      	BSF        STATUS, 6
0x0070	0x009E      	MOVWF      ANSEL
;LDR.c,7 :: 		ANSELH = 1;                           //Declarare variabila analogica pentru cea mai mare valoare
0x0071	0x3001      	MOVLW      1
0x0072	0x009F      	MOVWF      ANSELH
;LDR.c,8 :: 		C1ON_bit = 1;                          //Dezactivare functie comparator
0x0073	0x1799      	BSF        C1ON_bit, BitPos(C1ON_bit+0)
;LDR.c,9 :: 		C2ON_bit = 1;                          //Dezactivare functie comparator
0x0074	0x179A      	BSF        C2ON_bit, BitPos(C2ON_bit+0)
;LDR.c,11 :: 		ANSELH.ANS0 = 1;                      //Declarare Poarta A0 analogica
0x0075	0x141F      	BSF        ANSELH, 0
;LDR.c,12 :: 		TRISA.TRISA0 = 1;                     //Declarare Poarta A0 intrare analogica
0x0076	0x1683      	BSF        STATUS, 5
0x0077	0x1303      	BCF        STATUS, 6
0x0078	0x1405      	BSF        TRISA, 0
;LDR.c,13 :: 		ANSELH.ANS1 = 1;                      //Declarare Poarta A1 analogica
0x0079	0x1283      	BCF        STATUS, 5
0x007A	0x1703      	BSF        STATUS, 6
0x007B	0x149F      	BSF        ANSELH, 1
;LDR.c,14 :: 		TRISA.TRISA1 = 1;                     //Declarare Poarta A1 intrare analogica
0x007C	0x1683      	BSF        STATUS, 5
0x007D	0x1303      	BCF        STATUS, 6
0x007E	0x1485      	BSF        TRISA, 1
;LDR.c,17 :: 		TRISA  = 0xFF;                       //Incrementatre valoare Poarti A cu 0
0x007F	0x30FF      	MOVLW      255
0x0080	0x0085      	MOVWF      TRISA
;LDR.c,18 :: 		TRISC  = 0;                          //Incrementatre valoare Poarti C cu 0
0x0081	0x0187      	CLRF       TRISC
;LDR.c,19 :: 		TRISB  = 0;                          //Incrementatre valoare Poarti B cu 0
0x0082	0x0186      	CLRF       TRISB
;LDR.c,21 :: 		do {                                 //Start functie program
L_main0:
;LDR.c,22 :: 		ldr = ADC_Read(0);                 //Incrementare variabil intreaga fara semn pentru senzor lumina cu valoarea citita in  timp real a portii analogice A0
0x0083	0x1283      	BCF        STATUS, 5
0x0084	0x01AE      	CLRF       FARG_ADC_Read_channel
0x0085	0x201E      	CALL       _ADC_Read
0x0086	0x0870      	MOVF       R0, 0
0x0087	0x1283      	BCF        STATUS, 5
0x0088	0x00A8      	MOVWF      _ldr
0x0089	0x0871      	MOVF       R0+1, 0
0x008A	0x00A9      	MOVWF      _ldr+1
;LDR.c,23 :: 		potentiometru = ADC_Read(1);       //Incrementare variabil intreaga fara semn pentru Potentiometru cu valoarea citita in timp real a portii analogice A1
0x008B	0x3001      	MOVLW      1
0x008C	0x00AE      	MOVWF      FARG_ADC_Read_channel
0x008D	0x201E      	CALL       _ADC_Read
0x008E	0x0870      	MOVF       R0, 0
0x008F	0x1283      	BCF        STATUS, 5
0x0090	0x00AC      	MOVWF      FLOC__main+2
0x0091	0x0871      	MOVF       R0+1, 0
0x0092	0x00AD      	MOVWF      FLOC__main+3
0x0093	0x082C      	MOVF       FLOC__main+2, 0
0x0094	0x00A0      	MOVWF      _potentiometru
0x0095	0x082D      	MOVF       FLOC__main+3, 0
0x0096	0x00A1      	MOVWF      _potentiometru+1
;LDR.c,24 :: 		comp1=(ldr*5)/1024;                //Scalare variabil intreaga fara semn pentru senzor lumina in plaja de tensiune de lucru
0x0097	0x0828      	MOVF       _ldr, 0
0x0098	0x00F0      	MOVWF      R0
0x0099	0x0829      	MOVF       _ldr+1, 0
0x009A	0x00F1      	MOVWF      R0+1
0x009B	0x3005      	MOVLW      5
0x009C	0x00F4      	MOVWF      R4
0x009D	0x3000      	MOVLW      0
0x009E	0x00F5      	MOVWF      R4+1
0x009F	0x2042      	CALL       _Mul_16X16_U
0x00A0	0x300A      	MOVLW      10
0x00A1	0x00F2      	MOVWF      R2
0x00A2	0x0870      	MOVF       R0, 0
0x00A3	0x00AA      	MOVWF      FLOC__main
0x00A4	0x0871      	MOVF       R0+1, 0
0x00A5	0x00AB      	MOVWF      FLOC__main+1
0x00A6	0x0872      	MOVF       R2, 0
L__main6:
0x00A7	0x1903      	BTFSC      STATUS, 2
0x00A8	0x28AE      	GOTO       L__main7
0x00A9	0x0CAB      	RRF        FLOC__main+1, 1
0x00AA	0x0CAA      	RRF        FLOC__main, 1
0x00AB	0x13AB      	BCF        FLOC__main+1, 7
0x00AC	0x3EFF      	ADDLW      255
0x00AD	0x28A7      	GOTO       L__main6
L__main7:
0x00AE	0x082A      	MOVF       FLOC__main, 0
0x00AF	0x00A2      	MOVWF      _comp1
0x00B0	0x082B      	MOVF       FLOC__main+1, 0
0x00B1	0x00A3      	MOVWF      _comp1+1
;LDR.c,25 :: 		comp2=(potentiometru*5)/1024;      //Scalare variabil intreaga fara semn pentru potentiometru in plaja de tensiune de lucru
0x00B2	0x082C      	MOVF       FLOC__main+2, 0
0x00B3	0x00F0      	MOVWF      R0
0x00B4	0x082D      	MOVF       FLOC__main+3, 0
0x00B5	0x00F1      	MOVWF      R0+1
0x00B6	0x3005      	MOVLW      5
0x00B7	0x00F4      	MOVWF      R4
0x00B8	0x3000      	MOVLW      0
0x00B9	0x00F5      	MOVWF      R4+1
0x00BA	0x2042      	CALL       _Mul_16X16_U
0x00BB	0x300A      	MOVLW      10
0x00BC	0x00F4      	MOVWF      R4
0x00BD	0x0870      	MOVF       R0, 0
0x00BE	0x00F2      	MOVWF      R2
0x00BF	0x0871      	MOVF       R0+1, 0
0x00C0	0x00F3      	MOVWF      R2+1
0x00C1	0x0874      	MOVF       R4, 0
L__main8:
0x00C2	0x1903      	BTFSC      STATUS, 2
0x00C3	0x28C9      	GOTO       L__main9
0x00C4	0x0CF3      	RRF        R2+1, 1
0x00C5	0x0CF2      	RRF        R2, 1
0x00C6	0x13F3      	BCF        R2+1, 7
0x00C7	0x3EFF      	ADDLW      255
0x00C8	0x28C2      	GOTO       L__main8
L__main9:
0x00C9	0x0872      	MOVF       R2, 0
0x00CA	0x00A4      	MOVWF      _comp2
0x00CB	0x0873      	MOVF       R2+1, 0
0x00CC	0x00A5      	MOVWF      _comp2+1
;LDR.c,26 :: 		if(comp2>=comp1)                   //Start conditie comparare intre valorile scalate ale celor doi senzori analogici
0x00CD	0x082B      	MOVF       FLOC__main+1, 0
0x00CE	0x0273      	SUBWF      R2+1, 0
0x00CF	0x1D03      	BTFSS      STATUS, 2
0x00D0	0x28D3      	GOTO       L__main10
0x00D1	0x082A      	MOVF       FLOC__main, 0
0x00D2	0x0272      	SUBWF      R2, 0
L__main10:
0x00D3	0x1C03      	BTFSS      STATUS, 0
0x00D4	0x28D7      	GOTO       L_main3
;LDR.c,28 :: 		PORTB.RB4 = 0;                     //Daca conditia comparari este NOK valoarea poartii de output RB4 este zero ledul va ramane oprit pana cand conditia va deveni OK
0x00D5	0x1206      	BCF        PORTB, 4
;LDR.c,29 :: 		}
0x00D6	0x28D8      	GOTO       L_main4
L_main3:
;LDR.c,32 :: 		PORTB.RB4 = 1;                     //Daca conditia comparari este OK valoarea poartii de output RB4 este 1 ledul va if pornit pana cand conditia va deveni NOK
0x00D7	0x1606      	BSF        PORTB, 4
;LDR.c,33 :: 		}
L_main4:
;LDR.c,34 :: 		} while(1);                          //Executie in bucla a functiei
0x00D8	0x2883      	GOTO       L_main0
;LDR.c,35 :: 		}
L_end_main:
0x00D9	0x28D9      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [7]    _____DoICP
0x000A       [8]    _Delay_22us
0x0012      [12]    ___CC2DW
0x001E      [36]    _ADC_Read
0x0042      [43]    _Mul_16X16_U
0x006D     [109]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x000A       [1]    PCLATH
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x0020       [2]    _potentiometru
0x0022       [2]    _comp1
0x0024       [2]    _comp2
0x0026       [2]    ___DoICPAddr
0x0028       [2]    _ldr
0x002A       [4]    FLOC__main
0x002E       [1]    FARG_ADC_Read_channel
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
0x0119       [0]    C1ON_bit
0x011A       [0]    C2ON_bit
0x011E       [1]    ANSEL
0x011F       [1]    ANSELH
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_end_main
  _main
  L__main6
  L__main7
  L__main8
  L__main9
  L__main10
  L_ADC_Get_Sample0
  L_ADC_Get_Sample1
  L_ADC_Read2
  L_ADC_Read3
  L_end_ADC_Init
  _ADC_Init
  L_end_ADC_Get_Sample
  _ADC_Get_Sample
  L_end_ADC_Read
  _ADC_Read
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_1ms6
  L_Delay_5ms7
  L_Delay_8ms8
  L_Delay_10ms9
  L_Delay_100ms10
  L_Delay_1sec11
  L_boot16_Delay_5ms12
  L_Delay_Cyc13
  L_Delay_Cyc14
  L_VDelay_ms15
  L_VDelay_ms16
  L_VDelay_ms17
  L_VDelay_Advanced_ms18
  L_VDelay_Advanced_ms19
  L_VDelay_Advanced_ms20
  L_end_Get_Fosc_kHz
  _Get_Fosc_kHz
  L_end_Delay_1us
  _Delay_1us
  L_end_Delay_10us
  _Delay_10us
  L_end_Delay_22us
  _Delay_22us
  L_end_Delay_50us
  _Delay_50us
  L_end_Delay_80us
  _Delay_80us
  L_end_Delay_500us
  _Delay_500us
  L_end_Delay_5500us
  _Delay_5500us
  L_end_Delay_1ms
  _Delay_1ms
  L_end_Delay_5ms
  _Delay_5ms
  L_end_Delay_8ms
  _Delay_8ms
  L_end_Delay_10ms
  _Delay_10ms
  L_end_Delay_100ms
  _Delay_100ms
  L_end_Delay_1sec
  _Delay_1sec
  L_end_boot16_Delay_5ms
  _boot16_Delay_5ms
  L_end_Delay_Cyc
  _Delay_Cyc
  L_end_VDelay_ms
  _VDelay_ms
  L__VDelay_ms38
  L__VDelay_ms39
  L__VDelay_ms40
  L_end_VDelay_Advanced_ms
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms42
  L__VDelay_Advanced_ms43
  L__VDelay_Advanced_ms44
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Mul_8X8_U
  _Mul_8X8_U
  L_end_Mul_16X16_U
  _Mul_16X16_U
  L_end_Div_8X8_U
  _Div_8X8_U
  L_end_Div_16X16_U
  _Div_16X16_U
  L_end_Mul_8X8_S
  _Mul_8X8_S
  L_end_Mul_16X16_S
  _Mul_16X16_S
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8X8_S
  _Div_8X8_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
